diff --git a/setup.py b/setup.py
index 91c6aa8..8073d75 100644
--- a/setup.py
+++ b/setup.py
@@ -85,11 +85,8 @@ class CMakeBuild(build_ext):
         if platform.system() == "Darwin":
             # To support ARM64
             if os.getenv("ARCHS") == "arm64":
-                configure_args += [
-                    "-DCMAKE_CXX_COMPILER_TARGET=arm64-apple-macos11",
-                    "-DCMAKE_SYSTEM_NAME=Darwin",
-                    "-DCMAKE_SYSTEM_PROCESSOR=ARM64",
-                ]
+                # Let conda-build handle it
+                pass
             else:  # X64 arch
                 if shutil.which("brew"):
                     llvmpath = (
@@ -102,8 +99,6 @@ class CMakeBuild(build_ext):
                     f"-DCMAKE_CXX_COMPILER={llvmpath}/bin/clang++",
                     f"-DCMAKE_LINKER={llvmpath}/bin/lld",
                 ]  # Use clang instead of appleclang
-            # Disable OpenMP in M1 Macs
-            configure_args += [] if os.environ.get("USE_OMP") else ["-DENABLE_OPENMP=OFF"]
         elif platform.system() == "Windows":
             configure_args += ["-DENABLE_OPENMP=OFF", "-DENABLE_BLAS=OFF"]
         elif platform.system() != "Linux":
@@ -112,9 +107,15 @@ class CMakeBuild(build_ext):
         if not Path(self.build_temp).exists():
             os.makedirs(self.build_temp)
 
-        subprocess.check_call(["cmake", str(ext.sourcedir)] + configure_args, cwd=self.build_temp)
         subprocess.check_call(
-            ["cmake", "--build", ".", "--verbose"] + build_args, cwd=self.build_temp
+            ["cmake"] + os.environ["CMAKE_ARGS"].split(" ") + [str(ext.sourcedir)] + configure_args,
+            cwd=self.build_temp,
+            env=os.environ
+        )
+        subprocess.check_call(
+            ["cmake"] + os.environ["CMAKE_ARGS"].split(" ") + ["--build", ".", "--verbose"] + build_args,
+            cwd=self.build_temp,
+            env=os.environ,
         )

 
